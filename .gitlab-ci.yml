image:
  name: hashicorp/terraform:1.3.7
  entrypoint:
    - "/usr/bin/env"
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
 
stages:
    - download
    - plan
    - apply
    - destroy

gcs_get:
    image: google/cloud-sdk:alpine
    stage: download
    script:
        - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
        - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
        - gcloud storage ls gs://brain-trust-state/jira_keys

tf_fmt:
    stage: plan
    script:
        - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
        - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
        - mkdir -p $TF_CACHE_PATH
        - terraform fmt -recursive
        - echo "JIRA=111" >> build.env
    artifacts:
      reports:
        dotenv: build.env

tf_plan:
  stage: plan
  script:
    - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
    - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
    - mkdir -p $TF_CACHE_PATH
    - cd ./2-projects
    - export GOOGLE_APPLICATION_CREDENTIALS="${GCPCREDS}"
    - terraform init -backend-config="prefix=terraform/projects/${JIRA}"
    - terraform plan -out tf.plan
  needs:
    - job: tf_fmt
      artifacts: true
  artifacts:
    paths:
      - 2-projects/tf.plan

tf_apply:
  stage: apply
  script:
    - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
    - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
    - mkdir -p $TF_CACHE_PATH
    - export GOOGLE_APPLICATION_CREDENTIALS="${GCPCREDS}"
    - cd ./2-projects
    - terraform init -backend-config="prefix=terraform/projects/${JIRA}"
    - terraform apply -auto-approve
  needs:
    - job: tf_fmt
      artifacts: true
  when: manual

tf_destroy:
  stage: destroy
  script:
    - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
    - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
    - mkdir -p $TF_CACHE_PATH
    - export GOOGLE_APPLICATION_CREDENTIALS="${GCPCREDS}"
    - cd ./2-projects
    - terraform init -backend-config="prefix=terraform/projects/${JIRA}"
    - terraform destroy -auto-approve
  needs:
    - job: tf_fmt
      artifacts: true
  when: manual