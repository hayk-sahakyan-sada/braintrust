image:
  name: hashicorp/terraform:1.3.7
  entrypoint:
    - "/usr/bin/env"
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
 
stages:
    - download
    - plan
    - apply
    - destroy

gcs_get:
    image: google/cloud-sdk:alpine
    stage: download
    script:
        - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
        - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
        - JIRA=`gcloud storage ls gs://brain-trust-state/jira_keys | tail -n 1 | awk -F "/" '{print $NF}'`
        - echo $JIRA
        - gcloud storage cp gs://brain-trust-state/terraform_vars/$JIRA/terraform.tfvars .
        - echo "JIRA=$JIRA" >> build.env
    artifacts:
      reports:
        dotenv: build.env
      paths:
      - terraform.tfvars

tf_fmt:
    stage: plan
    script:
        - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
        - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
        - mkdir -p $TF_CACHE_PATH
        - terraform fmt -recursive

tf_plan:
  stage: plan
  script:
    - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
    - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
    - mkdir -p $TF_CACHE_PATH
    - cd ./2-projects
    - export GOOGLE_APPLICATION_CREDENTIALS="${GCPCREDS}"
    - terraform init -backend-config="prefix=terraform/projects/${JIRA}"
    - terraform plan -var-file="../terraform.tfvars" -out tf.plan 
  needs:
    - job: gcs_get
      artifacts: true
  artifacts:
    paths:
      - 2-projects/tf.plan

tf_apply:
  stage: apply
  script:
    - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
    - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
    - mkdir -p $TF_CACHE_PATH
    - export GOOGLE_APPLICATION_CREDENTIALS="${GCPCREDS}"
    - cd ./2-projects
    - terraform init -backend-config="prefix=terraform/projects/${JIRA}"
    - terraform apply -auto-approve tf.plan 
  needs:
    - job: gcs_get
      artifacts: true
    - job: tf_plan
      artifacts: true
  when: manual

gcs_rm:
    image: google/cloud-sdk:alpine
    stage: apply
    script:
        - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
        - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
        - gsutil rm gs://brain-trust-state/jira_keys/$JIRA
    needs:
    - job: gcs_get
      artifacts: true
    - job: tf_apply

tf_destroy:
  stage: destroy
  script:
    - TF_CACHE_PATH="$HOME/.terraform.d/plugin-cache"
    - export TF_PLUGIN_CACHE_DIR=$TF_CACHE_PATH
    - mkdir -p $TF_CACHE_PATH
    - export GOOGLE_APPLICATION_CREDENTIALS="${GCPCREDS}"
    - cd ./2-projects
    - terraform init -backend-config="prefix=terraform/projects/${JIRA}"
    - terraform destroy -auto-approve
  needs:
    - job: gcs_get
      artifacts: true
    - job: tf_plan
      artifacts: true
  when: manual